% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/check_realtime_lag.R
\name{check_realtime_lag}
\alias{check_realtime_lag}
\title{Check real time lag of realtime stations}
\usage{
check_realtime_lag(STATION_NUMBER, PROV_TERR_STATE_LOC,
  data_interval = "hourly", tracker = FALSE)
}
\arguments{
\item{STATION_NUMBER}{Water Survey of Canada station number. No default. Can also take the "ALL" argument.
Currently you can't mix stations from two difference jurisdictions. See examples.}

\item{PROV_TERR_STATE_LOC}{Province, state or territory. Defaults to "BC". Will not accept ALL.}

\item{data_interval}{Examine hourly or daily data? Defaults to hourly}

\item{tracker}{Should a progress list of stations be printed while the analysis is executed? Defaults to FALSE}
}
\value{
\itemize{
\item STATION NUMBER Water Survey of Canada station number
\item time_obs Date and time of most recent observation from that station
\item time_mod Date and time of data file upload to datamart
\item time_lag Time difference (in hours) between \code{time_mod} and \code{time_obs}. This value represents
the time delay for the network from data acquisition to data upload.
}
}
\description{
Check lag of real time stations using most recent observations and modification date of most recent file.
}
\examples{
check_realtime_lag(STATION_NUMBER = "08NL071", PROV_TERR_STATE_LOC = "BC")
check_realtime_lag(STATION_NUMBER = c("08NL071","07EB002"), PROV_TERR_STATE_LOC = "BC")

## This will throw an error
\dontrun{
check_realtime_lag(STATION_NUMBER = c("08NL071","05QB002"), PROV_TERR_STATE_LOC = "BC")
}

## To check all stations in Alberta:
check_realtime_lag(PROV_TERR_STATE_LOC = "BC")

\dontrun{

start_time = Sys.time()
## Download all stations
stns <- tidyhydat::download_network(PROV_TERR_STATE_LOC = "ALL")

## Create a vector of all PROV_TERR_STATE_LOC values
stns_loop_var <- unique(stns$PROV_TERR_STATE_LOC)

#stns_loop_var <- "PE"
lag_df <- c()
for (i in 1:length(stns_loop_var)) {
  cat(paste0(stns_loop_var[i], "\\n"))

  u = check_realtime_lag(PROV_TERR_STATE_LOC = stns_loop_var[i])
  u$PROV_TERR_STATE_LOC = stns_loop_var[i]
  lag_df = dplyr::bind_rows(lag_df, u)
}

total_time = Sys.time() - start_time
}


}
